{"version":3,"sources":["Components/Cards.js","Components/Cardlist.js","Components/Searchbox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Cards","id","name","email","className","alt","src","Cardlist","Robots","map","user","i","Searchbox","srchange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onsearch","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAYeA,EAVD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACpB,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAM,QAAQC,IAAG,+BAA4BL,EAA5B,mBACtB,6BAAKC,IACL,4BAAIC,QCiBDI,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACG,8BAESA,EAAOC,KAAI,SAACC,EAAKC,GAEb,OACI,cAAC,EAAD,CAAsBV,GAAKS,EAAKT,GAAKC,KAAOQ,EAAKR,KAAMC,MAAQO,EAAKP,OAAvDO,EAAKT,UCI3BW,EAbG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACI,qBAAKT,UAAY,MAAjB,SACI,uBAAOA,UAAY,kCACfU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCEbI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAQ,kBAAoBC,OAAQ,SAApE,SACKJ,EAAMK,aCiDJC,E,kDA7Cb,aAAe,IAAD,8BACZ,gBAaFC,SAAW,SAACC,GACV,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAbxC,EAAKC,MAAQ,CACXvB,OAAO,GACPoB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,+CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACnB,OAAO4B,S,oBAOtC,WAAW,IAAD,EACsBC,KAAKN,MAA5BvB,EADC,EACDA,OAAQoB,EADP,EACOA,YACTU,EAAY9B,EAAO+B,QAAO,SAAAC,GAC9B,OACIA,EAAMtC,KAAKuC,cAAcC,SAASd,EAAYa,kBAKpD,OAAQjC,EAAOmC,OAGb,sBAAKvC,UAAY,KAAjB,UACE,oBAAIA,UAAW,KAAf,2BACA,cAAC,EAAD,CAAWS,SAAWwB,KAAKZ,WAC3B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ8B,SANxB,oBAAIlC,UAAW,QAAf,yB,GA7BcwC,aCIHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.24281a5e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cards = ({id,name,email}) => {\r\n    return (\r\n        <div className ='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt = 'robot' src = {`https://robohash.org/${id}?size=200x200`}></img>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\n\r\nimport Cards from './Cards'\r\n\r\nconst Cardlist = ({Robots}) => {\r\n    return (\r\n       <div>\r\n            {\r\n                Robots.map((user,i) => {\r\n\r\n                    return (\r\n                        <Cards key= {user.id} id= {user.id}  name= {user.name} email= {user.email}/>\r\n                    \r\n                    )\r\n\r\n                }\r\n\r\n                )\r\n            }  \r\n       </div> \r\n    )\r\n}\r\n\r\n\r\nexport default Cardlist","import React from 'react';\r\n\r\nconst Searchbox = ({srchange}) => {\r\n    return (\r\n        <div className = 'pa2'>\r\n            <input className = 'pa3 ba b-green bg-lightest-blue'\r\n                type = 'search' \r\n                placeholder = 'search robots'\r\n                onChange = {srchange}  >\r\n                \r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow:'scroll', border: '5px solid black' , height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n// import Cards from './Cards'\r\nimport Cardlist from '../Components/Cardlist';\r\nimport Searchbox from '../Components/Searchbox';\r\n//import {robots} from './robots';\r\nimport  './App.css'\r\nimport Scroll from '../Components/Scroll'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      Robots:[],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users/')\r\n    .then(response=> response.json())\r\n    .then(users=> this.setState({Robots:users}))\r\n  }\r\n\r\n  onsearch = (event) =>{\r\n    this.setState({searchfield:event.target.value})\r\n  }\r\n\r\n  render () {\r\n    const {Robots, searchfield} = this.state;\r\n    const filRobots = Robots.filter(robot=> {\r\n      return (\r\n          robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n      )\r\n    }\r\n    )\r\n\r\n    return !Robots.length?\r\n    <h1 className= 'tc f1'>Loading</h1>:\r\n    (\r\n      <div className = 'tc'>\r\n        <h1 className= 'f1'>Robot Friends</h1>\r\n        <Searchbox srchange= {this.onsearch} />\r\n        <Scroll>\r\n          <Cardlist Robots={filRobots} />\r\n        </Scroll>\r\n      </div>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport 'tachyons'\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}